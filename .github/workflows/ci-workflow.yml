name: Continuous Integration
on: [push]                      # Will make the workflow run every time you push to any branch

jobs:
  build:
    name: Build and test C#
    runs-on: ubuntu-latest      # Sets the build environment a machine with the latest Ubuntu installed
    steps:
    - uses: actions/checkout@v2 # Adds a step to checkout the repository code

    - name: Hello world
      uses: actions/hello-world-javascript-action@v1.1 # Name of the action. This uses https://github.com/actions/hello-world-javascript-action
      with:                                            # This section is needed if you need to pass arguments to the action
        who-to-greet: 'Mona the Octocat'

    - run: dotnet build
    - run: dotnet test

  buildTS:
    name: Build and test TS
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '12.x'
    
    - name: install dependencies
      working-directory: ./DotnetTemplate.Web
      run: npm install

    - name: build TS code
      working-directory: ./DotnetTemplate.Web
      run: npm run build

    - name: run linter on TS code
      working-directory: ./DotnetTemplate.Web
      run: npm run lint

    - name: run TS tests
      working-directory: ./DotnetTemplate.Web
      run: npm t
  
  messageSlack:
    if: ${{ always() }}
    needs: [build, buildTS]
    runs-on: ubuntu-latest
    name: Message to Slack
    steps:
    - name: Send FAILED to Slack Workflow Builder
      if: ${{ needs.buildTS.result == 'failure' || needs.build.result == 'failure' }}
      id: slackFail
      uses: slackapi/slack-github-action@v1.19.0
      with:
        payload: |
          {
            "text": "GitHub Action build result: FAILED\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\nCommit message: ${{ github.event.head_commit.message }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "GitHub Action build result: FAILED\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\nCommit message: ${{ github.event.head_commit.message }}"
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
    - name: Send CANCELLED to Slack Workflow Builder
      if: ${{ needs.buildTS.result == 'cancelled' || needs.build.result == 'cancelled' }}
      id: slackCancel
      uses: slackapi/slack-github-action@v1.19.0
      with:
        payload: |
          {
            "text": "GitHub Action build result: CANCELLED\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\nCommit message: ${{ github.event.head_commit.message }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "GitHub Action build result: CANCELLED\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\nCommit message: ${{ github.event.head_commit.message }}"
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
    - name: Send SUCCESS to Slack Workflow Builder
      if: ${{ needs.buildTS.result == 'success' && needs.build.result == 'success' }}
      id: slackSuccess
      uses: slackapi/slack-github-action@v1.19.0
      with:
        payload: |
          {
            "text": "GitHub Action build result: SUCCESS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\nCommit message: ${{ github.event.head_commit.message }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "GitHub Action build result: SUCCESS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\nCommit message: ${{ github.event.head_commit.message }}"
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK